#############################################################################
# Makefile for building: bin/WASP_dynamic_linker
# Generated by qmake (2.01a) (Qt 4.5.2) on: Wed Oct 7 16:02:26 2009
# Project:  WASP_dynamic_linker.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_QT3SUPPORT_LIB -DQT3_SUPPORT -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/local/Trolltech/Qt-4.5.2/mkspecs/linux-g++ -I. -I/usr/local/Trolltech/Qt-4.5.2/include/QtCore -I/usr/local/Trolltech/Qt-4.5.2/include/QtGui -I/usr/local/Trolltech/Qt-4.5.2/include/Qt3Support -I/usr/local/Trolltech/Qt-4.5.2/include -Ibuild -Ibuild
LINK          = g++
LFLAGS        = -Wl,-rpath,/usr/local/Trolltech/Qt-4.5.2/lib
LIBS          = $(SUBLIBS)  -L/usr/local/Trolltech/Qt-4.5.2/lib -lQt3Support -L/usr/local/Trolltech/Qt-4.5.2/lib -lQtSql -pthread -pthread -pthread -pthread -lQtXml -pthread -pthread -pthread -pthread -L/usr/X11R6/lib -pthread -pthread -pthread -pthread -pthread -pthread -lQtNetwork -pthread -pthread -pthread -pthread -pthread -pthread -lQtGui -pthread -lpng -lfreetype -lSM -lICE -pthread -pthread -lXrender -lfontconfig -lXext -lX11 -lQtCore -lz -lm -pthread -lgthread-2.0 -lrt -lglib-2.0 -ldl -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = build/

####### Files

SOURCES       = src/mainwindowimpl.cpp \
		src/main.cpp \
		src/serial.cpp \
		src/symTabGetter.cpp \
		src/semaphore.cpp \
		src/sharedMemory.cpp \
		src/elf.cpp \
		src/wlf_loader.cpp build/moc_mainwindowimpl.cpp
OBJECTS       = build/mainwindowimpl.o \
		build/main.o \
		build/serial.o \
		build/symTabGetter.o \
		build/semaphore.o \
		build/sharedMemory.o \
		build/elf.o \
		build/wlf_loader.o \
		build/moc_mainwindowimpl.o
DIST          = /usr/local/Trolltech/Qt-4.5.2/mkspecs/common/g++.conf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/common/unix.conf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/common/linux.conf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/qconfig.pri \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/qt_functions.prf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/qt_config.prf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/exclusive_builds.prf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/default_pre.prf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/debug.prf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/debug_and_release.prf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/default_post.prf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/build_pass.prf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/warn_on.prf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/qt.prf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/unix/thread.prf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/moc.prf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/resources.prf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/uic.prf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/yacc.prf \
		/usr/local/Trolltech/Qt-4.5.2/mkspecs/features/lex.prf \
		WASP_dynamic_linker.pro
QMAKE_TARGET  = WASP_dynamic_linker
DESTDIR       = bin/
TARGET        = bin/WASP_dynamic_linker

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Debug $(TARGET)

$(TARGET): build/ui_mainwindow.h $(OBJECTS)  
	@$(CHK_DIR_EXISTS) bin/ || $(MKDIR) bin/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

qmake:  FORCE
	@$(QMAKE) -unix -after  CONFIG+=release -o Makefile.Debug WASP_dynamic_linker.pro

dist: 
	@$(CHK_DIR_EXISTS) build/WASP_dynamic_linker1.0.0 || $(MKDIR) build/WASP_dynamic_linker1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) build/WASP_dynamic_linker1.0.0/ && $(COPY_FILE) --parents src/mainwindowimpl.h src/serial.h src/symTabGetter.h src/semaphore.h src/sharedMemory.h src/elf.h src/wlf_loader.h build/WASP_dynamic_linker1.0.0/ && $(COPY_FILE) --parents src/mainwindowimpl.cpp src/main.cpp src/serial.cpp src/symTabGetter.cpp src/semaphore.cpp src/sharedMemory.cpp src/elf.cpp src/wlf_loader.cpp build/WASP_dynamic_linker1.0.0/ && $(COPY_FILE) --parents ui/mainwindow.ui build/WASP_dynamic_linker1.0.0/ && (cd `dirname build/WASP_dynamic_linker1.0.0` && $(TAR) WASP_dynamic_linker1.0.0.tar WASP_dynamic_linker1.0.0 && $(COMPRESS) WASP_dynamic_linker1.0.0.tar) && $(MOVE) `dirname build/WASP_dynamic_linker1.0.0`/WASP_dynamic_linker1.0.0.tar.gz . && $(DEL_FILE) -r build/WASP_dynamic_linker1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Debug


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: build/moc_mainwindowimpl.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) build/moc_mainwindowimpl.cpp
build/moc_mainwindowimpl.cpp: src/elf.h \
		src/symTabGetter.h \
		src/serial.h \
		build/ui_mainwindow.h \
		src/mainwindowimpl.h
	/usr/local/Trolltech/Qt-4.5.2/bin/moc $(DEFINES) $(INCPATH) src/mainwindowimpl.h -o build/moc_mainwindowimpl.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: build/ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) build/ui_mainwindow.h
build/ui_mainwindow.h: ui/mainwindow.ui
	/usr/local/Trolltech/Qt-4.5.2/bin/uic ui/mainwindow.ui -o build/ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

build/mainwindowimpl.o: src/mainwindowimpl.cpp src/mainwindowimpl.h \
		src/elf.h \
		src/symTabGetter.h \
		src/serial.h \
		build/ui_mainwindow.h \
		src/wlf_loader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/mainwindowimpl.o src/mainwindowimpl.cpp

build/main.o: src/main.cpp src/mainwindowimpl.h \
		src/elf.h \
		src/symTabGetter.h \
		src/serial.h \
		build/ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/main.o src/main.cpp

build/serial.o: src/serial.cpp src/serial.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/serial.o src/serial.cpp

build/symTabGetter.o: src/symTabGetter.cpp src/symTabGetter.h \
		src/serial.h \
		src/semaphore.h \
		src/sharedMemory.h \
		src/mainwindowimpl.h \
		src/elf.h \
		build/ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/symTabGetter.o src/symTabGetter.cpp

build/semaphore.o: src/semaphore.cpp src/semaphore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/semaphore.o src/semaphore.cpp

build/sharedMemory.o: src/sharedMemory.cpp src/sharedMemory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/sharedMemory.o src/sharedMemory.cpp

build/elf.o: src/elf.cpp src/elf.h \
		src/symTabGetter.h \
		src/serial.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/elf.o src/elf.cpp

build/wlf_loader.o: src/wlf_loader.cpp src/elf.h \
		src/symTabGetter.h \
		src/serial.h \
		src/wlf_loader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/wlf_loader.o src/wlf_loader.cpp

build/moc_mainwindowimpl.o: build/moc_mainwindowimpl.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/moc_mainwindowimpl.o build/moc_mainwindowimpl.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

